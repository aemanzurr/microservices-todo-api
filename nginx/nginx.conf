worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    upstream authentication {
        server authentication:8000;
    }

    upstream task {
        server task:8000;
    }

    server {
        listen 80;

        # authentication
        location /authentication/login {
            proxy_pass http://authentication/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /authentication/refresh {
            proxy_pass http://authentication/refresh;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /authentication/register {
            proxy_pass http://authentication/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # middleware
        location /validate_token {
            internal;

            proxy_pass http://authentication/validate;
            proxy_set_header Content-Type "application/json";

            proxy_set_header Authorization $http_authorization;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";

            proxy_method POST;
        }

        # task 
        location /task/ {
            auth_request /validate_token;
            error_page 401 = /unauthorized;

            # Extraer información del usuario autenticado
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;

            # Pasar los valores extraídos al servicio
            proxy_set_header X-User-Id $user_id;
            proxy_set_header X-User-Email $user_email;
            proxy_set_header Authorization $http_authorization;

            # Permitir el reenvío del cuerpo de la solicitud
            proxy_pass_request_body on;
            proxy_set_header Content-Length $content_length;
            proxy_set_header Content-Type $content_type;

            proxy_pass http://task/;
        }

        # unauthorized
        location = /unauthorized {
            return 401 '{"detail": "Unauthorized"}';
            add_header Content-Type application/json;
        }
    }
}
