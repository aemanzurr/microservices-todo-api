apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices-all-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: aemanzur/microservices-all-nginx:02
          ports:
            - containerPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micreoservices-all-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: admin-password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS authentication;
    CREATE DATABASE IF NOT EXISTS task;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices-all-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
        - name: authentication
          image: aemanzur/microservices-all-auth:02
          env:
            - name: DATABASE_URL
              value: mysql://root:admin-password@microservices-all-db:3306/authentication
          ports:
            - containerPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices-all-task
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task
  template:
    metadata:
      labels:
        app: task
    spec:
      containers:
        - name: task
          image: aemanzur/microservices-all-task:02
          env:
            - name: DATABASE_URL
              value: mysql://root:admin-password@microservices-all-db:3306/task
          ports:
            - containerPort: 8001